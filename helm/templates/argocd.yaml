apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd
spec:
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ''
  grafana:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  resourceInclusions: |
    - apiGroups:
      - ""
      kinds:
      - ConfigMap
      - Endpoints
      - LimitRange
      - Namespace
      - PersistentVolumeClaim
      - Pod
      - ReplicationController
      - ResourceQuota
      - ServiceAccount
      - Service
      clusters:
      - "*"
    - apiGroups:
      - "rbac.authorization.k8s.io/v1"
      kinds:
      - RoleBinding
      - Role
      clusters:
      - "*"
    - apiGroups:
      - "networking.k8s.io"
      - "extensions"
      - "discovery.k8s.io-na"
      - "cert-manager.io"
      - "batch"
      - "argoproj.io"
      - "apps"
      - "apiextensions.k8s.io"
      - "apiregistration.k8s.io"
      - "acme.cert-manager.io"
      kinds:
      - "*"
      clusters:
      - "*"  
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  initialSSHKnownHosts: {}
  rbac:
    defaultPolicy: 'role:nada'
    policy: |
      g, system:cluster-admins, role:admin   p, role:nada, *, *, *, deny
    scopes: '[groups]'
  repo:
    resources:
      limits:
        cpu: '1'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - "apps"
      kinds:
      - DaemonSets
      clusters:
      - "*"
    - apiGroups:
      - "batch"
      kinds:
      - Jobs
      clusters:
      - "*"      
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  tls:
    ca: {}
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: '2'
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
